// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fire_HH_
#define _fire_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Block_Mat_exit45_pro.h"
#include "AXIvideo2Mat.h"
#include "hls_fire_dection.h"
#include "Mat2AXIvideo.h"
#include "fifo_w32_d3_A.h"
#include "fifo_w32_d4_A.h"
#include "fifo_w32_d2_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_hls_firg8j.h"
#include "start_for_Mat2AXIhbi.h"
#include "fire_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct fire : public sc_module {
    // Port declarations 37
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<24> > input_r_TDATA;
    sc_in< sc_lv<3> > input_r_TKEEP;
    sc_in< sc_lv<3> > input_r_TSTRB;
    sc_in< sc_lv<1> > input_r_TUSER;
    sc_in< sc_lv<1> > input_r_TLAST;
    sc_in< sc_lv<1> > input_r_TID;
    sc_in< sc_lv<1> > input_r_TDEST;
    sc_out< sc_lv<24> > output_r_TDATA;
    sc_out< sc_lv<3> > output_r_TKEEP;
    sc_out< sc_lv<3> > output_r_TSTRB;
    sc_out< sc_lv<1> > output_r_TUSER;
    sc_out< sc_lv<1> > output_r_TLAST;
    sc_out< sc_lv<1> > output_r_TID;
    sc_out< sc_lv<1> > output_r_TDEST;
    sc_in< sc_logic > input_r_TVALID;
    sc_out< sc_logic > input_r_TREADY;
    sc_out< sc_logic > output_r_TVALID;
    sc_in< sc_logic > output_r_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    fire(sc_module_name name);
    SC_HAS_PROCESS(fire);

    ~fire();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fire_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* fire_AXILiteS_s_axi_U;
    Block_Mat_exit45_pro* Block_Mat_exit45_pro_U0;
    AXIvideo2Mat* AXIvideo2Mat_U0;
    hls_fire_dection* hls_fire_dection_U0;
    Mat2AXIvideo* Mat2AXIvideo_U0;
    fifo_w32_d3_A* rows_c_U;
    fifo_w32_d3_A* cols_c_U;
    fifo_w32_d4_A* img_1_rows_V_c_U;
    fifo_w32_d4_A* img_1_cols_V_c_U;
    fifo_w32_d3_A* r_low_c_U;
    fifo_w32_d3_A* r_up_c_U;
    fifo_w32_d3_A* g_low_c_U;
    fifo_w32_d3_A* g_up_c_U;
    fifo_w32_d3_A* b_low_c_U;
    fifo_w32_d3_A* b_up_c_U;
    fifo_w32_d2_A* img_0_rows_V_channel_U;
    fifo_w32_d2_A* img_0_cols_V_channel_U;
    fifo_w8_d2_A* img_0_data_stream_0_U;
    fifo_w8_d2_A* img_0_data_stream_1_U;
    fifo_w8_d2_A* img_0_data_stream_2_U;
    fifo_w8_d2_A* img_1_data_stream_0_U;
    fifo_w8_d2_A* img_1_data_stream_1_U;
    fifo_w8_d2_A* img_1_data_stream_2_U;
    start_for_hls_firg8j* start_for_hls_firg8j_U;
    start_for_Mat2AXIhbi* start_for_Mat2AXIhbi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > rows;
    sc_signal< sc_lv<32> > cols;
    sc_signal< sc_lv<32> > r_low;
    sc_signal< sc_lv<32> > r_up;
    sc_signal< sc_lv<32> > g_low;
    sc_signal< sc_lv<32> > g_up;
    sc_signal< sc_lv<32> > b_low;
    sc_signal< sc_lv<32> > b_up;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_ap_start;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_start_full_n;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_ap_done;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_ap_continue;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_ap_idle;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_ap_ready;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_start_out;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_start_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_rows_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_rows_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_cols_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_cols_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_img_1_rows_V_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_img_1_rows_V_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_img_1_cols_V_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_img_1_cols_V_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_r_low_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_r_low_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_r_up_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_r_up_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_g_low_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_g_low_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_g_up_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_g_up_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_b_low_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_b_low_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_b_up_out_din;
    sc_signal< sc_logic > Block_Mat_exit45_pro_U0_b_up_out_write;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_ap_return_0;
    sc_signal< sc_lv<32> > Block_Mat_exit45_pro_U0_ap_return_1;
    sc_signal< sc_logic > ap_channel_done_img_0_cols_V_channel;
    sc_signal< sc_logic > img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_img_0_cols_V_channel;
    sc_signal< sc_logic > ap_sync_channel_write_img_0_cols_V_channel;
    sc_signal< sc_logic > ap_channel_done_img_0_rows_V_channel;
    sc_signal< sc_logic > img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_img_0_rows_V_channel;
    sc_signal< sc_logic > ap_sync_channel_write_img_0_rows_V_channel;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIvideo2Mat_U0_input_r_TREADY;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_0_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_1_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_2_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_2_V_write;
    sc_signal< sc_logic > hls_fire_dection_U0_ap_start;
    sc_signal< sc_logic > hls_fire_dection_U0_ap_done;
    sc_signal< sc_logic > hls_fire_dection_U0_ap_continue;
    sc_signal< sc_logic > hls_fire_dection_U0_ap_idle;
    sc_signal< sc_logic > hls_fire_dection_U0_ap_ready;
    sc_signal< sc_logic > hls_fire_dection_U0_src_data_stream_0_V_read;
    sc_signal< sc_logic > hls_fire_dection_U0_src_data_stream_1_V_read;
    sc_signal< sc_logic > hls_fire_dection_U0_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > hls_fire_dection_U0_dst_data_stream_0_V_din;
    sc_signal< sc_logic > hls_fire_dection_U0_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > hls_fire_dection_U0_dst_data_stream_1_V_din;
    sc_signal< sc_logic > hls_fire_dection_U0_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > hls_fire_dection_U0_dst_data_stream_2_V_din;
    sc_signal< sc_logic > hls_fire_dection_U0_dst_data_stream_2_V_write;
    sc_signal< sc_logic > hls_fire_dection_U0_rows_read;
    sc_signal< sc_logic > hls_fire_dection_U0_cols_read;
    sc_signal< sc_logic > hls_fire_dection_U0_r_low_read;
    sc_signal< sc_logic > hls_fire_dection_U0_r_up_read;
    sc_signal< sc_logic > hls_fire_dection_U0_g_low_read;
    sc_signal< sc_logic > hls_fire_dection_U0_g_up_read;
    sc_signal< sc_logic > hls_fire_dection_U0_b_low_read;
    sc_signal< sc_logic > hls_fire_dection_U0_b_up_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_rows_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_cols_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_0_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_1_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_2_V_read;
    sc_signal< sc_lv<24> > Mat2AXIvideo_U0_output_r_TDATA;
    sc_signal< sc_logic > Mat2AXIvideo_U0_output_r_TVALID;
    sc_signal< sc_lv<3> > Mat2AXIvideo_U0_output_r_TKEEP;
    sc_signal< sc_lv<3> > Mat2AXIvideo_U0_output_r_TSTRB;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_output_r_TUSER;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_output_r_TLAST;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_output_r_TID;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_output_r_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > rows_c_full_n;
    sc_signal< sc_lv<32> > rows_c_dout;
    sc_signal< sc_logic > rows_c_empty_n;
    sc_signal< sc_logic > cols_c_full_n;
    sc_signal< sc_lv<32> > cols_c_dout;
    sc_signal< sc_logic > cols_c_empty_n;
    sc_signal< sc_logic > img_1_rows_V_c_full_n;
    sc_signal< sc_lv<32> > img_1_rows_V_c_dout;
    sc_signal< sc_logic > img_1_rows_V_c_empty_n;
    sc_signal< sc_logic > img_1_cols_V_c_full_n;
    sc_signal< sc_lv<32> > img_1_cols_V_c_dout;
    sc_signal< sc_logic > img_1_cols_V_c_empty_n;
    sc_signal< sc_logic > r_low_c_full_n;
    sc_signal< sc_lv<32> > r_low_c_dout;
    sc_signal< sc_logic > r_low_c_empty_n;
    sc_signal< sc_logic > r_up_c_full_n;
    sc_signal< sc_lv<32> > r_up_c_dout;
    sc_signal< sc_logic > r_up_c_empty_n;
    sc_signal< sc_logic > g_low_c_full_n;
    sc_signal< sc_lv<32> > g_low_c_dout;
    sc_signal< sc_logic > g_low_c_empty_n;
    sc_signal< sc_logic > g_up_c_full_n;
    sc_signal< sc_lv<32> > g_up_c_dout;
    sc_signal< sc_logic > g_up_c_empty_n;
    sc_signal< sc_logic > b_low_c_full_n;
    sc_signal< sc_lv<32> > b_low_c_dout;
    sc_signal< sc_logic > b_low_c_empty_n;
    sc_signal< sc_logic > b_up_c_full_n;
    sc_signal< sc_lv<32> > b_up_c_dout;
    sc_signal< sc_logic > b_up_c_empty_n;
    sc_signal< sc_lv<32> > img_0_rows_V_channel_dout;
    sc_signal< sc_logic > img_0_rows_V_channel_empty_n;
    sc_signal< sc_lv<32> > img_0_cols_V_channel_dout;
    sc_signal< sc_logic > img_0_cols_V_channel_empty_n;
    sc_signal< sc_logic > img_0_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_0_dout;
    sc_signal< sc_logic > img_0_data_stream_0_empty_n;
    sc_signal< sc_logic > img_0_data_stream_1_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_1_dout;
    sc_signal< sc_logic > img_0_data_stream_1_empty_n;
    sc_signal< sc_logic > img_0_data_stream_2_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_2_dout;
    sc_signal< sc_logic > img_0_data_stream_2_empty_n;
    sc_signal< sc_logic > img_1_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_0_dout;
    sc_signal< sc_logic > img_1_data_stream_0_empty_n;
    sc_signal< sc_logic > img_1_data_stream_1_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_1_dout;
    sc_signal< sc_logic > img_1_data_stream_1_empty_n;
    sc_signal< sc_logic > img_1_data_stream_2_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_2_dout;
    sc_signal< sc_logic > img_1_data_stream_2_empty_n;
    sc_signal< sc_lv<1> > start_for_hls_fire_dection_U0_din;
    sc_signal< sc_logic > start_for_hls_fire_dection_U0_full_n;
    sc_signal< sc_lv<1> > start_for_hls_fire_dection_U0_dout;
    sc_signal< sc_logic > start_for_hls_fire_dection_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_din;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_dout;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_full_n;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_write;
    sc_signal< sc_logic > hls_fire_dection_U0_start_full_n;
    sc_signal< sc_logic > hls_fire_dection_U0_start_write;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_AXIvideo2Mat_U0_ap_continue();
    void thread_AXIvideo2Mat_U0_ap_start();
    void thread_AXIvideo2Mat_U0_start_full_n();
    void thread_AXIvideo2Mat_U0_start_write();
    void thread_Block_Mat_exit45_pro_U0_ap_continue();
    void thread_Block_Mat_exit45_pro_U0_ap_start();
    void thread_Block_Mat_exit45_pro_U0_start_full_n();
    void thread_Mat2AXIvideo_U0_ap_continue();
    void thread_Mat2AXIvideo_U0_ap_start();
    void thread_Mat2AXIvideo_U0_start_full_n();
    void thread_Mat2AXIvideo_U0_start_write();
    void thread_ap_channel_done_img_0_cols_V_channel();
    void thread_ap_channel_done_img_0_rows_V_channel();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_channel_write_img_0_cols_V_channel();
    void thread_ap_sync_channel_write_img_0_rows_V_channel();
    void thread_ap_sync_continue();
    void thread_hls_fire_dection_U0_ap_continue();
    void thread_hls_fire_dection_U0_ap_start();
    void thread_hls_fire_dection_U0_start_full_n();
    void thread_hls_fire_dection_U0_start_write();
    void thread_input_r_TREADY();
    void thread_output_r_TDATA();
    void thread_output_r_TDEST();
    void thread_output_r_TID();
    void thread_output_r_TKEEP();
    void thread_output_r_TLAST();
    void thread_output_r_TSTRB();
    void thread_output_r_TUSER();
    void thread_output_r_TVALID();
    void thread_start_for_Mat2AXIvideo_U0_din();
    void thread_start_for_hls_fire_dection_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
