// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_fire_dection.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hls_fire_dection::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_fire_dection::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> hls_fire_dection::ap_ST_fsm_state1 = "1";
const sc_lv<5> hls_fire_dection::ap_ST_fsm_state2 = "10";
const sc_lv<5> hls_fire_dection::ap_ST_fsm_state3 = "100";
const sc_lv<5> hls_fire_dection::ap_ST_fsm_state4 = "1000";
const sc_lv<5> hls_fire_dection::ap_ST_fsm_state5 = "10000";
const sc_lv<32> hls_fire_dection::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> hls_fire_dection::ap_const_lv32_2 = "10";
const sc_lv<1> hls_fire_dection::ap_const_lv1_1 = "1";
const sc_lv<32> hls_fire_dection::ap_const_lv32_4 = "100";
const sc_lv<32> hls_fire_dection::ap_const_lv32_1 = "1";
const sc_lv<32> hls_fire_dection::ap_const_lv32_3 = "11";
const sc_lv<31> hls_fire_dection::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> hls_fire_dection::ap_const_lv1_0 = "0";
const sc_lv<31> hls_fire_dection::ap_const_lv31_1 = "1";
const sc_lv<16> hls_fire_dection::ap_const_lv16_96 = "10010110";
const sc_lv<32> hls_fire_dection::ap_const_lv32_8 = "1000";
const sc_lv<32> hls_fire_dection::ap_const_lv32_F = "1111";
const sc_lv<7> hls_fire_dection::ap_const_lv7_0 = "0000000";
const sc_lv<8> hls_fire_dection::ap_const_lv8_80 = "10000000";
const sc_lv<8> hls_fire_dection::ap_const_lv8_0 = "00000000";
const sc_lv<8> hls_fire_dection::ap_const_lv8_FF = "11111111";
const sc_lv<16> hls_fire_dection::ap_const_lv16_4C = "1001100";
const sc_lv<14> hls_fire_dection::ap_const_lv14_1D = "11101";
const sc_lv<15> hls_fire_dection::ap_const_lv15_7FD5 = "111111111010101";
const sc_lv<16> hls_fire_dection::ap_const_lv16_FFAB = "1111111110101011";
const sc_lv<16> hls_fire_dection::ap_const_lv16_FF95 = "1111111110010101";
const sc_lv<14> hls_fire_dection::ap_const_lv14_3FEB = "11111111101011";
const bool hls_fire_dection::ap_const_boolean_1 = true;

hls_fire_dection::hls_fire_dection(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fire_mac_muladd_8bkb_U31 = new fire_mac_muladd_8bkb<1,1,8,8,16,16>("fire_mac_muladd_8bkb_U31");
    fire_mac_muladd_8bkb_U31->din0(grp_fu_594_p0);
    fire_mac_muladd_8bkb_U31->din1(grp_fu_594_p1);
    fire_mac_muladd_8bkb_U31->din2(grp_fu_602_p3);
    fire_mac_muladd_8bkb_U31->dout(grp_fu_594_p3);
    fire_mac_muladd_8cud_U32 = new fire_mac_muladd_8cud<1,1,8,6,16,16>("fire_mac_muladd_8cud_U32");
    fire_mac_muladd_8cud_U32->din0(grp_fu_602_p0);
    fire_mac_muladd_8cud_U32->din1(grp_fu_602_p1);
    fire_mac_muladd_8cud_U32->din2(tmp_7_i_reg_724);
    fire_mac_muladd_8cud_U32->dout(grp_fu_602_p3);
    fire_mac_muladd_8dEe_U33 = new fire_mac_muladd_8dEe<1,1,8,7,15,16>("fire_mac_muladd_8dEe_U33");
    fire_mac_muladd_8dEe_U33->din0(grp_fu_610_p0);
    fire_mac_muladd_8dEe_U33->din1(grp_fu_610_p1);
    fire_mac_muladd_8dEe_U33->din2(grp_fu_610_p2);
    fire_mac_muladd_8dEe_U33->dout(grp_fu_610_p3);
    fire_mac_muladd_8eOg_U34 = new fire_mac_muladd_8eOg<1,1,8,8,16,16>("fire_mac_muladd_8eOg_U34");
    fire_mac_muladd_8eOg_U34->din0(grp_fu_618_p0);
    fire_mac_muladd_8eOg_U34->din1(grp_fu_618_p1);
    fire_mac_muladd_8eOg_U34->din2(grp_fu_610_p3);
    fire_mac_muladd_8eOg_U34->dout(grp_fu_618_p3);
    fire_mac_muladd_8eOg_U35 = new fire_mac_muladd_8eOg<1,1,8,8,16,16>("fire_mac_muladd_8eOg_U35");
    fire_mac_muladd_8eOg_U35->din0(grp_fu_626_p0);
    fire_mac_muladd_8eOg_U35->din1(grp_fu_626_p1);
    fire_mac_muladd_8eOg_U35->din2(grp_fu_633_p3);
    fire_mac_muladd_8eOg_U35->dout(grp_fu_626_p3);
    fire_mac_muladd_8fYi_U36 = new fire_mac_muladd_8fYi<1,1,8,6,15,16>("fire_mac_muladd_8fYi_U36");
    fire_mac_muladd_8fYi_U36->din0(grp_fu_633_p0);
    fire_mac_muladd_8fYi_U36->din1(grp_fu_633_p1);
    fire_mac_muladd_8fYi_U36->din2(grp_fu_633_p2);
    fire_mac_muladd_8fYi_U36->dout(grp_fu_633_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_365_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_365_p2 );

    SC_METHOD(thread_b_low_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( b_low_empty_n );

    SC_METHOD(thread_b_low_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_b_up_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_b_up_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_brmerge_i_fu_565_p2);
    sensitive << ( not_sel_tmp1_reg_729 );
    sensitive << ( or_cond7_i_fu_561_p2 );

    SC_METHOD(thread_cb_fu_517_p2);
    sensitive << ( tmp_17_i_fu_508_p4 );

    SC_METHOD(thread_col_cast_i_fu_376_p1);
    sensitive << ( col_i_reg_350 );

    SC_METHOD(thread_col_fu_385_p2);
    sensitive << ( col_i_reg_350 );

    SC_METHOD(thread_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cols_empty_n );

    SC_METHOD(thread_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_cr_fu_543_p2);
    sensitive << ( tmp_24_i_fu_534_p4 );

    SC_METHOD(thread_dst_data_stream_0_V_blk_n);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_reg_698 );
    sensitive << ( brmerge_i_fu_565_p2 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dst_data_stream_1_V_blk_n);
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_reg_703 );
    sensitive << ( brmerge_i_fu_565_p2 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dst_data_stream_2_V_blk_n);
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_5_reg_710 );
    sensitive << ( brmerge_i_fu_565_p2 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_g_low_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( g_low_empty_n );

    SC_METHOD(thread_g_low_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_g_up_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( g_up_empty_n );

    SC_METHOD(thread_g_up_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_grp_fu_594_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_594_p00 );

    SC_METHOD(thread_grp_fu_594_p00);
    sensitive << ( tmp_5_reg_710 );

    SC_METHOD(thread_grp_fu_594_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_602_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast64_i_fu_485_p1 );

    SC_METHOD(thread_grp_fu_602_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_610_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_610_p00 );

    SC_METHOD(thread_grp_fu_610_p00);
    sensitive << ( tmp_5_reg_710 );

    SC_METHOD(thread_grp_fu_610_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_610_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_610_p20 );

    SC_METHOD(thread_grp_fu_610_p20);
    sensitive << ( tmp_11_i_fu_497_p3 );

    SC_METHOD(thread_grp_fu_618_p0);
    sensitive << ( tmp_6_cast65_i_reg_718 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_618_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_626_p0);
    sensitive << ( tmp_6_cast65_i_reg_718 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_626_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_633_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast64_i_fu_485_p1 );

    SC_METHOD(thread_grp_fu_633_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_633_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_633_p20 );

    SC_METHOD(thread_grp_fu_633_p20);
    sensitive << ( tmp_18_i_fu_523_p3 );

    SC_METHOD(thread_not_sel_tmp1_fu_473_p2);
    sensitive << ( sel_tmp1_fu_467_p2 );

    SC_METHOD(thread_or_cond7_i_fu_561_p2);
    sensitive << ( tmp_33_i_reg_734 );
    sensitive << ( tmp_34_i_reg_739 );

    SC_METHOD(thread_r_low_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( r_low_empty_n );

    SC_METHOD(thread_r_low_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_r_up_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( r_up_empty_n );

    SC_METHOD(thread_r_up_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_row_cast_i_fu_361_p1);
    sensitive << ( row_i_reg_339 );

    SC_METHOD(thread_row_fu_370_p2);
    sensitive << ( row_i_reg_339 );

    SC_METHOD(thread_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );

    SC_METHOD(thread_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );

    SC_METHOD(thread_sel_tmp1_fu_467_p2);
    sensitive << ( tmp8_fu_461_p2 );
    sensitive << ( tmp6_fu_449_p2 );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );

    SC_METHOD(thread_tmp6_fu_449_p2);
    sensitive << ( tmp7_fu_443_p2 );
    sensitive << ( tmp_25_i_fu_413_p2 );

    SC_METHOD(thread_tmp7_fu_443_p2);
    sensitive << ( tmp_26_i_fu_418_p2 );
    sensitive << ( tmp_30_i_fu_428_p2 );

    SC_METHOD(thread_tmp8_fu_461_p2);
    sensitive << ( tmp9_fu_455_p2 );
    sensitive << ( tmp_29_i_fu_423_p2 );

    SC_METHOD(thread_tmp9_fu_455_p2);
    sensitive << ( tmp_32_i_fu_438_p2 );
    sensitive << ( tmp_31_i_fu_433_p2 );

    SC_METHOD(thread_tmp_11_i_fu_497_p3);
    sensitive << ( tmp_4_reg_703 );

    SC_METHOD(thread_tmp_17_i_fu_508_p4);
    sensitive << ( grp_fu_618_p3 );

    SC_METHOD(thread_tmp_18_i_fu_523_p3);
    sensitive << ( tmp_5_reg_710 );

    SC_METHOD(thread_tmp_1_i_fu_380_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( cols_read_reg_647 );
    sensitive << ( col_cast_i_fu_376_p1 );

    SC_METHOD(thread_tmp_24_i_fu_534_p4);
    sensitive << ( grp_fu_626_p3 );

    SC_METHOD(thread_tmp_25_i_fu_413_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( r_low_read_reg_652 );
    sensitive << ( tmp_4_i_fu_391_p1 );

    SC_METHOD(thread_tmp_26_i_fu_418_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( r_up_read_reg_657 );
    sensitive << ( tmp_4_i_fu_391_p1 );

    SC_METHOD(thread_tmp_29_i_fu_423_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( g_low_read_reg_662 );
    sensitive << ( tmp_6_i_fu_395_p1 );

    SC_METHOD(thread_tmp_30_i_fu_428_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( g_up_read_reg_667 );
    sensitive << ( tmp_6_i_fu_395_p1 );

    SC_METHOD(thread_tmp_31_i_fu_433_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( b_low_read_reg_672 );
    sensitive << ( tmp_8_i_fu_409_p1 );

    SC_METHOD(thread_tmp_32_i_fu_438_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( b_up_read_reg_677 );
    sensitive << ( tmp_8_i_fu_409_p1 );

    SC_METHOD(thread_tmp_33_i_fu_549_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_fu_488_p4 );
    sensitive << ( cb_fu_517_p2 );

    SC_METHOD(thread_tmp_34_i_fu_555_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( cb_fu_517_p2 );
    sensitive << ( cr_fu_543_p2 );

    SC_METHOD(thread_tmp_4_i_fu_391_p1);
    sensitive << ( src_data_stream_2_V_dout );

    SC_METHOD(thread_tmp_6_cast65_i_fu_399_p1);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_tmp_6_i_fu_395_p1);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_tmp_7_i_fu_403_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_i_fu_403_p00 );

    SC_METHOD(thread_tmp_7_i_fu_403_p00);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_tmp_7_i_fu_403_p2);
    sensitive << ( tmp_7_i_fu_403_p0 );

    SC_METHOD(thread_tmp_8_cast64_i_fu_485_p1);
    sensitive << ( tmp_4_reg_703 );

    SC_METHOD(thread_tmp_8_i_fu_409_p1);
    sensitive << ( src_data_stream_1_V_dout );

    SC_METHOD(thread_tmp_i_fu_365_p2);
    sensitive << ( rows_read_reg_642 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_cast_i_fu_361_p1 );

    SC_METHOD(thread_y_fu_488_p4);
    sensitive << ( grp_fu_594_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( r_low_empty_n );
    sensitive << ( r_up_empty_n );
    sensitive << ( g_low_empty_n );
    sensitive << ( g_up_empty_n );
    sensitive << ( b_low_empty_n );
    sensitive << ( b_up_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_380_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_365_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_fire_dection_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, rows_dout, "(port)rows_dout");
    sc_trace(mVcdFile, rows_empty_n, "(port)rows_empty_n");
    sc_trace(mVcdFile, rows_read, "(port)rows_read");
    sc_trace(mVcdFile, cols_dout, "(port)cols_dout");
    sc_trace(mVcdFile, cols_empty_n, "(port)cols_empty_n");
    sc_trace(mVcdFile, cols_read, "(port)cols_read");
    sc_trace(mVcdFile, r_low_dout, "(port)r_low_dout");
    sc_trace(mVcdFile, r_low_empty_n, "(port)r_low_empty_n");
    sc_trace(mVcdFile, r_low_read, "(port)r_low_read");
    sc_trace(mVcdFile, r_up_dout, "(port)r_up_dout");
    sc_trace(mVcdFile, r_up_empty_n, "(port)r_up_empty_n");
    sc_trace(mVcdFile, r_up_read, "(port)r_up_read");
    sc_trace(mVcdFile, g_low_dout, "(port)g_low_dout");
    sc_trace(mVcdFile, g_low_empty_n, "(port)g_low_empty_n");
    sc_trace(mVcdFile, g_low_read, "(port)g_low_read");
    sc_trace(mVcdFile, g_up_dout, "(port)g_up_dout");
    sc_trace(mVcdFile, g_up_empty_n, "(port)g_up_empty_n");
    sc_trace(mVcdFile, g_up_read, "(port)g_up_read");
    sc_trace(mVcdFile, b_low_dout, "(port)b_low_dout");
    sc_trace(mVcdFile, b_low_empty_n, "(port)b_low_empty_n");
    sc_trace(mVcdFile, b_low_read, "(port)b_low_read");
    sc_trace(mVcdFile, b_up_dout, "(port)b_up_dout");
    sc_trace(mVcdFile, b_up_empty_n, "(port)b_up_empty_n");
    sc_trace(mVcdFile, b_up_read, "(port)b_up_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_i_fu_380_p2, "tmp_1_i_fu_380_p2");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_blk_n, "dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, dst_data_stream_1_V_blk_n, "dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_blk_n, "dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, rows_blk_n, "rows_blk_n");
    sc_trace(mVcdFile, cols_blk_n, "cols_blk_n");
    sc_trace(mVcdFile, r_low_blk_n, "r_low_blk_n");
    sc_trace(mVcdFile, r_up_blk_n, "r_up_blk_n");
    sc_trace(mVcdFile, g_low_blk_n, "g_low_blk_n");
    sc_trace(mVcdFile, g_up_blk_n, "g_up_blk_n");
    sc_trace(mVcdFile, b_low_blk_n, "b_low_blk_n");
    sc_trace(mVcdFile, b_up_blk_n, "b_up_blk_n");
    sc_trace(mVcdFile, rows_read_reg_642, "rows_read_reg_642");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_read_reg_647, "cols_read_reg_647");
    sc_trace(mVcdFile, r_low_read_reg_652, "r_low_read_reg_652");
    sc_trace(mVcdFile, r_up_read_reg_657, "r_up_read_reg_657");
    sc_trace(mVcdFile, g_low_read_reg_662, "g_low_read_reg_662");
    sc_trace(mVcdFile, g_up_read_reg_667, "g_up_read_reg_667");
    sc_trace(mVcdFile, b_low_read_reg_672, "b_low_read_reg_672");
    sc_trace(mVcdFile, b_up_read_reg_677, "b_up_read_reg_677");
    sc_trace(mVcdFile, row_fu_370_p2, "row_fu_370_p2");
    sc_trace(mVcdFile, row_reg_685, "row_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, col_fu_385_p2, "col_fu_385_p2");
    sc_trace(mVcdFile, col_reg_693, "col_reg_693");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_3_reg_698, "tmp_3_reg_698");
    sc_trace(mVcdFile, tmp_4_reg_703, "tmp_4_reg_703");
    sc_trace(mVcdFile, tmp_5_reg_710, "tmp_5_reg_710");
    sc_trace(mVcdFile, tmp_6_cast65_i_fu_399_p1, "tmp_6_cast65_i_fu_399_p1");
    sc_trace(mVcdFile, tmp_6_cast65_i_reg_718, "tmp_6_cast65_i_reg_718");
    sc_trace(mVcdFile, tmp_7_i_fu_403_p2, "tmp_7_i_fu_403_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_724, "tmp_7_i_reg_724");
    sc_trace(mVcdFile, not_sel_tmp1_fu_473_p2, "not_sel_tmp1_fu_473_p2");
    sc_trace(mVcdFile, not_sel_tmp1_reg_729, "not_sel_tmp1_reg_729");
    sc_trace(mVcdFile, tmp_33_i_fu_549_p2, "tmp_33_i_fu_549_p2");
    sc_trace(mVcdFile, tmp_33_i_reg_734, "tmp_33_i_reg_734");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_34_i_fu_555_p2, "tmp_34_i_fu_555_p2");
    sc_trace(mVcdFile, tmp_34_i_reg_739, "tmp_34_i_reg_739");
    sc_trace(mVcdFile, row_i_reg_339, "row_i_reg_339");
    sc_trace(mVcdFile, col_i_reg_350, "col_i_reg_350");
    sc_trace(mVcdFile, tmp_i_fu_365_p2, "tmp_i_fu_365_p2");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, row_cast_i_fu_361_p1, "row_cast_i_fu_361_p1");
    sc_trace(mVcdFile, col_cast_i_fu_376_p1, "col_cast_i_fu_376_p1");
    sc_trace(mVcdFile, tmp_7_i_fu_403_p0, "tmp_7_i_fu_403_p0");
    sc_trace(mVcdFile, tmp_4_i_fu_391_p1, "tmp_4_i_fu_391_p1");
    sc_trace(mVcdFile, tmp_6_i_fu_395_p1, "tmp_6_i_fu_395_p1");
    sc_trace(mVcdFile, tmp_8_i_fu_409_p1, "tmp_8_i_fu_409_p1");
    sc_trace(mVcdFile, tmp_26_i_fu_418_p2, "tmp_26_i_fu_418_p2");
    sc_trace(mVcdFile, tmp_30_i_fu_428_p2, "tmp_30_i_fu_428_p2");
    sc_trace(mVcdFile, tmp7_fu_443_p2, "tmp7_fu_443_p2");
    sc_trace(mVcdFile, tmp_25_i_fu_413_p2, "tmp_25_i_fu_413_p2");
    sc_trace(mVcdFile, tmp_32_i_fu_438_p2, "tmp_32_i_fu_438_p2");
    sc_trace(mVcdFile, tmp_31_i_fu_433_p2, "tmp_31_i_fu_433_p2");
    sc_trace(mVcdFile, tmp9_fu_455_p2, "tmp9_fu_455_p2");
    sc_trace(mVcdFile, tmp_29_i_fu_423_p2, "tmp_29_i_fu_423_p2");
    sc_trace(mVcdFile, tmp8_fu_461_p2, "tmp8_fu_461_p2");
    sc_trace(mVcdFile, tmp6_fu_449_p2, "tmp6_fu_449_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_467_p2, "sel_tmp1_fu_467_p2");
    sc_trace(mVcdFile, grp_fu_594_p3, "grp_fu_594_p3");
    sc_trace(mVcdFile, tmp_11_i_fu_497_p3, "tmp_11_i_fu_497_p3");
    sc_trace(mVcdFile, grp_fu_618_p3, "grp_fu_618_p3");
    sc_trace(mVcdFile, tmp_17_i_fu_508_p4, "tmp_17_i_fu_508_p4");
    sc_trace(mVcdFile, tmp_18_i_fu_523_p3, "tmp_18_i_fu_523_p3");
    sc_trace(mVcdFile, grp_fu_626_p3, "grp_fu_626_p3");
    sc_trace(mVcdFile, tmp_24_i_fu_534_p4, "tmp_24_i_fu_534_p4");
    sc_trace(mVcdFile, y_fu_488_p4, "y_fu_488_p4");
    sc_trace(mVcdFile, cb_fu_517_p2, "cb_fu_517_p2");
    sc_trace(mVcdFile, cr_fu_543_p2, "cr_fu_543_p2");
    sc_trace(mVcdFile, or_cond7_i_fu_561_p2, "or_cond7_i_fu_561_p2");
    sc_trace(mVcdFile, brmerge_i_fu_565_p2, "brmerge_i_fu_565_p2");
    sc_trace(mVcdFile, grp_fu_594_p0, "grp_fu_594_p0");
    sc_trace(mVcdFile, grp_fu_594_p1, "grp_fu_594_p1");
    sc_trace(mVcdFile, grp_fu_602_p3, "grp_fu_602_p3");
    sc_trace(mVcdFile, grp_fu_602_p0, "grp_fu_602_p0");
    sc_trace(mVcdFile, tmp_8_cast64_i_fu_485_p1, "tmp_8_cast64_i_fu_485_p1");
    sc_trace(mVcdFile, grp_fu_602_p1, "grp_fu_602_p1");
    sc_trace(mVcdFile, grp_fu_610_p0, "grp_fu_610_p0");
    sc_trace(mVcdFile, grp_fu_610_p1, "grp_fu_610_p1");
    sc_trace(mVcdFile, grp_fu_610_p2, "grp_fu_610_p2");
    sc_trace(mVcdFile, grp_fu_618_p0, "grp_fu_618_p0");
    sc_trace(mVcdFile, grp_fu_618_p1, "grp_fu_618_p1");
    sc_trace(mVcdFile, grp_fu_610_p3, "grp_fu_610_p3");
    sc_trace(mVcdFile, grp_fu_626_p0, "grp_fu_626_p0");
    sc_trace(mVcdFile, grp_fu_626_p1, "grp_fu_626_p1");
    sc_trace(mVcdFile, grp_fu_633_p3, "grp_fu_633_p3");
    sc_trace(mVcdFile, grp_fu_633_p0, "grp_fu_633_p0");
    sc_trace(mVcdFile, grp_fu_633_p1, "grp_fu_633_p1");
    sc_trace(mVcdFile, grp_fu_633_p2, "grp_fu_633_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_594_p00, "grp_fu_594_p00");
    sc_trace(mVcdFile, grp_fu_610_p00, "grp_fu_610_p00");
    sc_trace(mVcdFile, grp_fu_610_p20, "grp_fu_610_p20");
    sc_trace(mVcdFile, grp_fu_633_p20, "grp_fu_633_p20");
    sc_trace(mVcdFile, tmp_7_i_fu_403_p00, "tmp_7_i_fu_403_p00");
#endif

    }
}

hls_fire_dection::~hls_fire_dection() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fire_mac_muladd_8bkb_U31;
    delete fire_mac_muladd_8cud_U32;
    delete fire_mac_muladd_8dEe_U33;
    delete fire_mac_muladd_8eOg_U34;
    delete fire_mac_muladd_8eOg_U35;
    delete fire_mac_muladd_8fYi_U36;
}

void hls_fire_dection::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_365_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        col_i_reg_350 = col_reg_693.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_365_p2.read()))) {
        col_i_reg_350 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_0))) {
        row_i_reg_339 = row_reg_685.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        row_i_reg_339 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        b_low_read_reg_672 = b_low_dout.read();
        b_up_read_reg_677 = b_up_dout.read();
        cols_read_reg_647 = cols_dout.read();
        g_low_read_reg_662 = g_low_dout.read();
        g_up_read_reg_667 = g_up_dout.read();
        r_low_read_reg_652 = r_low_dout.read();
        r_up_read_reg_657 = r_up_dout.read();
        rows_read_reg_642 = rows_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        col_reg_693 = col_fu_385_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        not_sel_tmp1_reg_729 = not_sel_tmp1_fu_473_p2.read();
        tmp_3_reg_698 = src_data_stream_0_V_dout.read();
        tmp_4_reg_703 = src_data_stream_1_V_dout.read();
        tmp_5_reg_710 = src_data_stream_2_V_dout.read();
        tmp_6_cast65_i_reg_718 = tmp_6_cast65_i_fu_399_p1.read();
        tmp_7_i_reg_724 = tmp_7_i_fu_403_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_reg_685 = row_fu_370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_33_i_reg_734 = tmp_33_i_fu_549_p2.read();
        tmp_34_i_reg_739 = tmp_34_i_fu_555_p2.read();
    }
}

void hls_fire_dection::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void hls_fire_dection::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void hls_fire_dection::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void hls_fire_dection::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void hls_fire_dection::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void hls_fire_dection::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read()));
}

void hls_fire_dection::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())));
}

void hls_fire_dection::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()));
}

void hls_fire_dection::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_365_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void hls_fire_dection::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_365_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_b_low_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        b_low_blk_n = b_low_empty_n.read();
    } else {
        b_low_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_b_low_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        b_low_read = ap_const_logic_1;
    } else {
        b_low_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_b_up_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        b_up_blk_n = b_up_empty_n.read();
    } else {
        b_up_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_b_up_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        b_up_read = ap_const_logic_1;
    } else {
        b_up_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_brmerge_i_fu_565_p2() {
    brmerge_i_fu_565_p2 = (or_cond7_i_fu_561_p2.read() | not_sel_tmp1_reg_729.read());
}

void hls_fire_dection::thread_cb_fu_517_p2() {
    cb_fu_517_p2 = (tmp_17_i_fu_508_p4.read() ^ ap_const_lv8_80);
}

void hls_fire_dection::thread_col_cast_i_fu_376_p1() {
    col_cast_i_fu_376_p1 = esl_zext<32,31>(col_i_reg_350.read());
}

void hls_fire_dection::thread_col_fu_385_p2() {
    col_fu_385_p2 = (!col_i_reg_350.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(col_i_reg_350.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void hls_fire_dection::thread_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cols_blk_n = cols_empty_n.read();
    } else {
        cols_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_cols_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        cols_read = ap_const_logic_1;
    } else {
        cols_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_cr_fu_543_p2() {
    cr_fu_543_p2 = (tmp_24_i_fu_534_p4.read() ^ ap_const_lv8_80);
}

void hls_fire_dection::thread_dst_data_stream_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n.read();
    } else {
        dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = (!brmerge_i_fu_565_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_fu_565_p2.read()[0].to_bool())? ap_const_lv8_FF: tmp_3_reg_698.read());
}

void hls_fire_dection::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_dst_data_stream_1_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n.read();
    } else {
        dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = (!brmerge_i_fu_565_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_fu_565_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_4_reg_703.read());
}

void hls_fire_dection::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_dst_data_stream_2_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n.read();
    } else {
        dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = (!brmerge_i_fu_565_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_fu_565_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_5_reg_710.read());
}

void hls_fire_dection::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_g_low_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        g_low_blk_n = g_low_empty_n.read();
    } else {
        g_low_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_g_low_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        g_low_read = ap_const_logic_1;
    } else {
        g_low_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_g_up_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        g_up_blk_n = g_up_empty_n.read();
    } else {
        g_up_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_g_up_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        g_up_read = ap_const_logic_1;
    } else {
        g_up_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_grp_fu_594_p0() {
    grp_fu_594_p0 =  (sc_lv<8>) (grp_fu_594_p00.read());
}

void hls_fire_dection::thread_grp_fu_594_p00() {
    grp_fu_594_p00 = esl_zext<16,8>(tmp_5_reg_710.read());
}

void hls_fire_dection::thread_grp_fu_594_p1() {
    grp_fu_594_p1 =  (sc_lv<8>) (ap_const_lv16_4C);
}

void hls_fire_dection::thread_grp_fu_602_p0() {
    grp_fu_602_p0 =  (sc_lv<8>) (tmp_8_cast64_i_fu_485_p1.read());
}

void hls_fire_dection::thread_grp_fu_602_p1() {
    grp_fu_602_p1 =  (sc_lv<6>) (ap_const_lv14_1D);
}

void hls_fire_dection::thread_grp_fu_610_p0() {
    grp_fu_610_p0 =  (sc_lv<8>) (grp_fu_610_p00.read());
}

void hls_fire_dection::thread_grp_fu_610_p00() {
    grp_fu_610_p00 = esl_zext<15,8>(tmp_5_reg_710.read());
}

void hls_fire_dection::thread_grp_fu_610_p1() {
    grp_fu_610_p1 =  (sc_lv<7>) (ap_const_lv15_7FD5);
}

void hls_fire_dection::thread_grp_fu_610_p2() {
    grp_fu_610_p2 =  (sc_lv<15>) (grp_fu_610_p20.read());
}

void hls_fire_dection::thread_grp_fu_610_p20() {
    grp_fu_610_p20 = esl_zext<16,15>(tmp_11_i_fu_497_p3.read());
}

void hls_fire_dection::thread_grp_fu_618_p0() {
    grp_fu_618_p0 =  (sc_lv<8>) (tmp_6_cast65_i_reg_718.read());
}

void hls_fire_dection::thread_grp_fu_618_p1() {
    grp_fu_618_p1 =  (sc_lv<8>) (ap_const_lv16_FFAB);
}

void hls_fire_dection::thread_grp_fu_626_p0() {
    grp_fu_626_p0 =  (sc_lv<8>) (tmp_6_cast65_i_reg_718.read());
}

void hls_fire_dection::thread_grp_fu_626_p1() {
    grp_fu_626_p1 =  (sc_lv<8>) (ap_const_lv16_FF95);
}

void hls_fire_dection::thread_grp_fu_633_p0() {
    grp_fu_633_p0 =  (sc_lv<8>) (tmp_8_cast64_i_fu_485_p1.read());
}

void hls_fire_dection::thread_grp_fu_633_p1() {
    grp_fu_633_p1 =  (sc_lv<6>) (ap_const_lv14_3FEB);
}

void hls_fire_dection::thread_grp_fu_633_p2() {
    grp_fu_633_p2 =  (sc_lv<15>) (grp_fu_633_p20.read());
}

void hls_fire_dection::thread_grp_fu_633_p20() {
    grp_fu_633_p20 = esl_zext<16,15>(tmp_18_i_fu_523_p3.read());
}

void hls_fire_dection::thread_not_sel_tmp1_fu_473_p2() {
    not_sel_tmp1_fu_473_p2 = (sel_tmp1_fu_467_p2.read() ^ ap_const_lv1_1);
}

void hls_fire_dection::thread_or_cond7_i_fu_561_p2() {
    or_cond7_i_fu_561_p2 = (tmp_33_i_reg_734.read() & tmp_34_i_reg_739.read());
}

void hls_fire_dection::thread_r_low_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        r_low_blk_n = r_low_empty_n.read();
    } else {
        r_low_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_r_low_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        r_low_read = ap_const_logic_1;
    } else {
        r_low_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_r_up_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        r_up_blk_n = r_up_empty_n.read();
    } else {
        r_up_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_r_up_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        r_up_read = ap_const_logic_1;
    } else {
        r_up_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_row_cast_i_fu_361_p1() {
    row_cast_i_fu_361_p1 = esl_zext<32,31>(row_i_reg_339.read());
}

void hls_fire_dection::thread_row_fu_370_p2() {
    row_fu_370_p2 = (!row_i_reg_339.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(row_i_reg_339.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void hls_fire_dection::thread_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rows_blk_n = rows_empty_n.read();
    } else {
        rows_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_rows_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
        rows_read = ap_const_logic_1;
    } else {
        rows_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_sel_tmp1_fu_467_p2() {
    sel_tmp1_fu_467_p2 = (tmp8_fu_461_p2.read() | tmp6_fu_449_p2.read());
}

void hls_fire_dection::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void hls_fire_dection::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void hls_fire_dection::thread_tmp6_fu_449_p2() {
    tmp6_fu_449_p2 = (tmp7_fu_443_p2.read() | tmp_25_i_fu_413_p2.read());
}

void hls_fire_dection::thread_tmp7_fu_443_p2() {
    tmp7_fu_443_p2 = (tmp_26_i_fu_418_p2.read() | tmp_30_i_fu_428_p2.read());
}

void hls_fire_dection::thread_tmp8_fu_461_p2() {
    tmp8_fu_461_p2 = (tmp9_fu_455_p2.read() | tmp_29_i_fu_423_p2.read());
}

void hls_fire_dection::thread_tmp9_fu_455_p2() {
    tmp9_fu_455_p2 = (tmp_32_i_fu_438_p2.read() | tmp_31_i_fu_433_p2.read());
}

void hls_fire_dection::thread_tmp_11_i_fu_497_p3() {
    tmp_11_i_fu_497_p3 = esl_concat<8,7>(tmp_4_reg_703.read(), ap_const_lv7_0);
}

void hls_fire_dection::thread_tmp_17_i_fu_508_p4() {
    tmp_17_i_fu_508_p4 = grp_fu_618_p3.read().range(15, 8);
}

void hls_fire_dection::thread_tmp_18_i_fu_523_p3() {
    tmp_18_i_fu_523_p3 = esl_concat<8,7>(tmp_5_reg_710.read(), ap_const_lv7_0);
}

void hls_fire_dection::thread_tmp_1_i_fu_380_p2() {
    tmp_1_i_fu_380_p2 = (!col_cast_i_fu_376_p1.read().is_01() || !cols_read_reg_647.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_cast_i_fu_376_p1.read()) < sc_bigint<32>(cols_read_reg_647.read()));
}

void hls_fire_dection::thread_tmp_24_i_fu_534_p4() {
    tmp_24_i_fu_534_p4 = grp_fu_626_p3.read().range(15, 8);
}

void hls_fire_dection::thread_tmp_25_i_fu_413_p2() {
    tmp_25_i_fu_413_p2 = (!tmp_4_i_fu_391_p1.read().is_01() || !r_low_read_reg_652.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_4_i_fu_391_p1.read()) < sc_bigint<32>(r_low_read_reg_652.read()));
}

void hls_fire_dection::thread_tmp_26_i_fu_418_p2() {
    tmp_26_i_fu_418_p2 = (!tmp_4_i_fu_391_p1.read().is_01() || !r_up_read_reg_657.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_4_i_fu_391_p1.read()) > sc_bigint<32>(r_up_read_reg_657.read()));
}

void hls_fire_dection::thread_tmp_29_i_fu_423_p2() {
    tmp_29_i_fu_423_p2 = (!tmp_6_i_fu_395_p1.read().is_01() || !g_low_read_reg_662.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_6_i_fu_395_p1.read()) < sc_bigint<32>(g_low_read_reg_662.read()));
}

void hls_fire_dection::thread_tmp_30_i_fu_428_p2() {
    tmp_30_i_fu_428_p2 = (!tmp_6_i_fu_395_p1.read().is_01() || !g_up_read_reg_667.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_6_i_fu_395_p1.read()) > sc_bigint<32>(g_up_read_reg_667.read()));
}

void hls_fire_dection::thread_tmp_31_i_fu_433_p2() {
    tmp_31_i_fu_433_p2 = (!tmp_8_i_fu_409_p1.read().is_01() || !b_low_read_reg_672.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_8_i_fu_409_p1.read()) < sc_bigint<32>(b_low_read_reg_672.read()));
}

void hls_fire_dection::thread_tmp_32_i_fu_438_p2() {
    tmp_32_i_fu_438_p2 = (!tmp_8_i_fu_409_p1.read().is_01() || !b_up_read_reg_677.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_8_i_fu_409_p1.read()) > sc_bigint<32>(b_up_read_reg_677.read()));
}

void hls_fire_dection::thread_tmp_33_i_fu_549_p2() {
    tmp_33_i_fu_549_p2 = (!y_fu_488_p4.read().is_01() || !cb_fu_517_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(y_fu_488_p4.read()) > sc_biguint<8>(cb_fu_517_p2.read()));
}

void hls_fire_dection::thread_tmp_34_i_fu_555_p2() {
    tmp_34_i_fu_555_p2 = (!cr_fu_543_p2.read().is_01() || !cb_fu_517_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(cr_fu_543_p2.read()) > sc_biguint<8>(cb_fu_517_p2.read()));
}

void hls_fire_dection::thread_tmp_4_i_fu_391_p1() {
    tmp_4_i_fu_391_p1 = esl_zext<32,8>(src_data_stream_2_V_dout.read());
}

void hls_fire_dection::thread_tmp_6_cast65_i_fu_399_p1() {
    tmp_6_cast65_i_fu_399_p1 = esl_zext<16,8>(src_data_stream_0_V_dout.read());
}

void hls_fire_dection::thread_tmp_6_i_fu_395_p1() {
    tmp_6_i_fu_395_p1 = esl_zext<32,8>(src_data_stream_0_V_dout.read());
}

void hls_fire_dection::thread_tmp_7_i_fu_403_p0() {
    tmp_7_i_fu_403_p0 =  (sc_lv<8>) (tmp_7_i_fu_403_p00.read());
}

void hls_fire_dection::thread_tmp_7_i_fu_403_p00() {
    tmp_7_i_fu_403_p00 = esl_zext<16,8>(src_data_stream_0_V_dout.read());
}

void hls_fire_dection::thread_tmp_7_i_fu_403_p2() {
    tmp_7_i_fu_403_p2 = (!tmp_7_i_fu_403_p0.read().is_01() || !ap_const_lv16_96.is_01())? sc_lv<16>(): sc_biguint<8>(tmp_7_i_fu_403_p0.read()) * sc_biguint<16>(ap_const_lv16_96);
}

void hls_fire_dection::thread_tmp_8_cast64_i_fu_485_p1() {
    tmp_8_cast64_i_fu_485_p1 = esl_zext<14,8>(tmp_4_reg_703.read());
}

void hls_fire_dection::thread_tmp_8_i_fu_409_p1() {
    tmp_8_i_fu_409_p1 = esl_zext<32,8>(src_data_stream_1_V_dout.read());
}

void hls_fire_dection::thread_tmp_i_fu_365_p2() {
    tmp_i_fu_365_p2 = (!row_cast_i_fu_361_p1.read().is_01() || !rows_read_reg_642.read().is_01())? sc_lv<1>(): (sc_bigint<32>(row_cast_i_fu_361_p1.read()) < sc_bigint<32>(rows_read_reg_642.read()));
}

void hls_fire_dection::thread_y_fu_488_p4() {
    y_fu_488_p4 = grp_fu_594_p3.read().range(15, 8);
}

void hls_fire_dection::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, r_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, g_up_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_low_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, b_up_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_365_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))) && esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_380_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

