// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_fire_dection_HH_
#define _hls_fire_dection_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fire_mac_muladd_8bkb.h"
#include "fire_mac_muladd_8cud.h"
#include "fire_mac_muladd_8dEe.h"
#include "fire_mac_muladd_8eOg.h"
#include "fire_mac_muladd_8fYi.h"

namespace ap_rtl {

struct hls_fire_dection : public sc_module {
    // Port declarations 49
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<8> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<8> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;
    sc_in< sc_lv<32> > rows_dout;
    sc_in< sc_logic > rows_empty_n;
    sc_out< sc_logic > rows_read;
    sc_in< sc_lv<32> > cols_dout;
    sc_in< sc_logic > cols_empty_n;
    sc_out< sc_logic > cols_read;
    sc_in< sc_lv<32> > r_low_dout;
    sc_in< sc_logic > r_low_empty_n;
    sc_out< sc_logic > r_low_read;
    sc_in< sc_lv<32> > r_up_dout;
    sc_in< sc_logic > r_up_empty_n;
    sc_out< sc_logic > r_up_read;
    sc_in< sc_lv<32> > g_low_dout;
    sc_in< sc_logic > g_low_empty_n;
    sc_out< sc_logic > g_low_read;
    sc_in< sc_lv<32> > g_up_dout;
    sc_in< sc_logic > g_up_empty_n;
    sc_out< sc_logic > g_up_read;
    sc_in< sc_lv<32> > b_low_dout;
    sc_in< sc_logic > b_low_empty_n;
    sc_out< sc_logic > b_low_read;
    sc_in< sc_lv<32> > b_up_dout;
    sc_in< sc_logic > b_up_empty_n;
    sc_out< sc_logic > b_up_read;


    // Module declarations
    hls_fire_dection(sc_module_name name);
    SC_HAS_PROCESS(hls_fire_dection);

    ~hls_fire_dection();

    sc_trace_file* mVcdFile;

    fire_mac_muladd_8bkb<1,1,8,8,16,16>* fire_mac_muladd_8bkb_U31;
    fire_mac_muladd_8cud<1,1,8,6,16,16>* fire_mac_muladd_8cud_U32;
    fire_mac_muladd_8dEe<1,1,8,7,15,16>* fire_mac_muladd_8dEe_U33;
    fire_mac_muladd_8eOg<1,1,8,8,16,16>* fire_mac_muladd_8eOg_U34;
    fire_mac_muladd_8eOg<1,1,8,8,16,16>* fire_mac_muladd_8eOg_U35;
    fire_mac_muladd_8fYi<1,1,8,6,15,16>* fire_mac_muladd_8fYi_U36;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > src_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_1_i_fu_380_p2;
    sc_signal< sc_logic > src_data_stream_1_V_blk_n;
    sc_signal< sc_logic > src_data_stream_2_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > dst_data_stream_1_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_2_V_blk_n;
    sc_signal< sc_logic > rows_blk_n;
    sc_signal< sc_logic > cols_blk_n;
    sc_signal< sc_logic > r_low_blk_n;
    sc_signal< sc_logic > r_up_blk_n;
    sc_signal< sc_logic > g_low_blk_n;
    sc_signal< sc_logic > g_up_blk_n;
    sc_signal< sc_logic > b_low_blk_n;
    sc_signal< sc_logic > b_up_blk_n;
    sc_signal< sc_lv<32> > rows_read_reg_642;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > cols_read_reg_647;
    sc_signal< sc_lv<32> > r_low_read_reg_652;
    sc_signal< sc_lv<32> > r_up_read_reg_657;
    sc_signal< sc_lv<32> > g_low_read_reg_662;
    sc_signal< sc_lv<32> > g_up_read_reg_667;
    sc_signal< sc_lv<32> > b_low_read_reg_672;
    sc_signal< sc_lv<32> > b_up_read_reg_677;
    sc_signal< sc_lv<31> > row_fu_370_p2;
    sc_signal< sc_lv<31> > row_reg_685;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > col_fu_385_p2;
    sc_signal< sc_lv<31> > col_reg_693;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<8> > tmp_3_reg_698;
    sc_signal< sc_lv<8> > tmp_4_reg_703;
    sc_signal< sc_lv<8> > tmp_5_reg_710;
    sc_signal< sc_lv<16> > tmp_6_cast65_i_fu_399_p1;
    sc_signal< sc_lv<16> > tmp_6_cast65_i_reg_718;
    sc_signal< sc_lv<16> > tmp_7_i_fu_403_p2;
    sc_signal< sc_lv<16> > tmp_7_i_reg_724;
    sc_signal< sc_lv<1> > not_sel_tmp1_fu_473_p2;
    sc_signal< sc_lv<1> > not_sel_tmp1_reg_729;
    sc_signal< sc_lv<1> > tmp_33_i_fu_549_p2;
    sc_signal< sc_lv<1> > tmp_33_i_reg_734;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_34_i_fu_555_p2;
    sc_signal< sc_lv<1> > tmp_34_i_reg_739;
    sc_signal< sc_lv<31> > row_i_reg_339;
    sc_signal< sc_lv<31> > col_i_reg_350;
    sc_signal< sc_lv<1> > tmp_i_fu_365_p2;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<32> > row_cast_i_fu_361_p1;
    sc_signal< sc_lv<32> > col_cast_i_fu_376_p1;
    sc_signal< sc_lv<8> > tmp_7_i_fu_403_p0;
    sc_signal< sc_lv<32> > tmp_4_i_fu_391_p1;
    sc_signal< sc_lv<32> > tmp_6_i_fu_395_p1;
    sc_signal< sc_lv<32> > tmp_8_i_fu_409_p1;
    sc_signal< sc_lv<1> > tmp_26_i_fu_418_p2;
    sc_signal< sc_lv<1> > tmp_30_i_fu_428_p2;
    sc_signal< sc_lv<1> > tmp7_fu_443_p2;
    sc_signal< sc_lv<1> > tmp_25_i_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_32_i_fu_438_p2;
    sc_signal< sc_lv<1> > tmp_31_i_fu_433_p2;
    sc_signal< sc_lv<1> > tmp9_fu_455_p2;
    sc_signal< sc_lv<1> > tmp_29_i_fu_423_p2;
    sc_signal< sc_lv<1> > tmp8_fu_461_p2;
    sc_signal< sc_lv<1> > tmp6_fu_449_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_467_p2;
    sc_signal< sc_lv<16> > grp_fu_594_p3;
    sc_signal< sc_lv<15> > tmp_11_i_fu_497_p3;
    sc_signal< sc_lv<16> > grp_fu_618_p3;
    sc_signal< sc_lv<8> > tmp_17_i_fu_508_p4;
    sc_signal< sc_lv<15> > tmp_18_i_fu_523_p3;
    sc_signal< sc_lv<16> > grp_fu_626_p3;
    sc_signal< sc_lv<8> > tmp_24_i_fu_534_p4;
    sc_signal< sc_lv<8> > y_fu_488_p4;
    sc_signal< sc_lv<8> > cb_fu_517_p2;
    sc_signal< sc_lv<8> > cr_fu_543_p2;
    sc_signal< sc_lv<1> > or_cond7_i_fu_561_p2;
    sc_signal< sc_lv<1> > brmerge_i_fu_565_p2;
    sc_signal< sc_lv<8> > grp_fu_594_p0;
    sc_signal< sc_lv<8> > grp_fu_594_p1;
    sc_signal< sc_lv<16> > grp_fu_602_p3;
    sc_signal< sc_lv<8> > grp_fu_602_p0;
    sc_signal< sc_lv<14> > tmp_8_cast64_i_fu_485_p1;
    sc_signal< sc_lv<6> > grp_fu_602_p1;
    sc_signal< sc_lv<8> > grp_fu_610_p0;
    sc_signal< sc_lv<7> > grp_fu_610_p1;
    sc_signal< sc_lv<15> > grp_fu_610_p2;
    sc_signal< sc_lv<8> > grp_fu_618_p0;
    sc_signal< sc_lv<8> > grp_fu_618_p1;
    sc_signal< sc_lv<16> > grp_fu_610_p3;
    sc_signal< sc_lv<8> > grp_fu_626_p0;
    sc_signal< sc_lv<8> > grp_fu_626_p1;
    sc_signal< sc_lv<16> > grp_fu_633_p3;
    sc_signal< sc_lv<8> > grp_fu_633_p0;
    sc_signal< sc_lv<6> > grp_fu_633_p1;
    sc_signal< sc_lv<15> > grp_fu_633_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_594_p00;
    sc_signal< sc_lv<15> > grp_fu_610_p00;
    sc_signal< sc_lv<16> > grp_fu_610_p20;
    sc_signal< sc_lv<16> > grp_fu_633_p20;
    sc_signal< sc_lv<16> > tmp_7_i_fu_403_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<16> ap_const_lv16_96;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<16> ap_const_lv16_4C;
    static const sc_lv<14> ap_const_lv14_1D;
    static const sc_lv<15> ap_const_lv15_7FD5;
    static const sc_lv<16> ap_const_lv16_FFAB;
    static const sc_lv<16> ap_const_lv16_FF95;
    static const sc_lv<14> ap_const_lv14_3FEB;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_block_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_low_blk_n();
    void thread_b_low_read();
    void thread_b_up_blk_n();
    void thread_b_up_read();
    void thread_brmerge_i_fu_565_p2();
    void thread_cb_fu_517_p2();
    void thread_col_cast_i_fu_376_p1();
    void thread_col_fu_385_p2();
    void thread_cols_blk_n();
    void thread_cols_read();
    void thread_cr_fu_543_p2();
    void thread_dst_data_stream_0_V_blk_n();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_blk_n();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_blk_n();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_g_low_blk_n();
    void thread_g_low_read();
    void thread_g_up_blk_n();
    void thread_g_up_read();
    void thread_grp_fu_594_p0();
    void thread_grp_fu_594_p00();
    void thread_grp_fu_594_p1();
    void thread_grp_fu_602_p0();
    void thread_grp_fu_602_p1();
    void thread_grp_fu_610_p0();
    void thread_grp_fu_610_p00();
    void thread_grp_fu_610_p1();
    void thread_grp_fu_610_p2();
    void thread_grp_fu_610_p20();
    void thread_grp_fu_618_p0();
    void thread_grp_fu_618_p1();
    void thread_grp_fu_626_p0();
    void thread_grp_fu_626_p1();
    void thread_grp_fu_633_p0();
    void thread_grp_fu_633_p1();
    void thread_grp_fu_633_p2();
    void thread_grp_fu_633_p20();
    void thread_not_sel_tmp1_fu_473_p2();
    void thread_or_cond7_i_fu_561_p2();
    void thread_r_low_blk_n();
    void thread_r_low_read();
    void thread_r_up_blk_n();
    void thread_r_up_read();
    void thread_row_cast_i_fu_361_p1();
    void thread_row_fu_370_p2();
    void thread_rows_blk_n();
    void thread_rows_read();
    void thread_sel_tmp1_fu_467_p2();
    void thread_src_data_stream_0_V_blk_n();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_blk_n();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_blk_n();
    void thread_src_data_stream_2_V_read();
    void thread_tmp6_fu_449_p2();
    void thread_tmp7_fu_443_p2();
    void thread_tmp8_fu_461_p2();
    void thread_tmp9_fu_455_p2();
    void thread_tmp_11_i_fu_497_p3();
    void thread_tmp_17_i_fu_508_p4();
    void thread_tmp_18_i_fu_523_p3();
    void thread_tmp_1_i_fu_380_p2();
    void thread_tmp_24_i_fu_534_p4();
    void thread_tmp_25_i_fu_413_p2();
    void thread_tmp_26_i_fu_418_p2();
    void thread_tmp_29_i_fu_423_p2();
    void thread_tmp_30_i_fu_428_p2();
    void thread_tmp_31_i_fu_433_p2();
    void thread_tmp_32_i_fu_438_p2();
    void thread_tmp_33_i_fu_549_p2();
    void thread_tmp_34_i_fu_555_p2();
    void thread_tmp_4_i_fu_391_p1();
    void thread_tmp_6_cast65_i_fu_399_p1();
    void thread_tmp_6_i_fu_395_p1();
    void thread_tmp_7_i_fu_403_p0();
    void thread_tmp_7_i_fu_403_p00();
    void thread_tmp_7_i_fu_403_p2();
    void thread_tmp_8_cast64_i_fu_485_p1();
    void thread_tmp_8_i_fu_409_p1();
    void thread_tmp_i_fu_365_p2();
    void thread_y_fu_488_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
